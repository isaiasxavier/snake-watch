services:
  nginx:
    image: nginx:latest
    container_name: snake-watch-nginx
    ports:
      - "8080:80"
    volumes:
      - ../src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - snake_watch

  php:
    build:
      context: ./php
    image: symfony-environment-php:8.3.10
    container_name: snake-watch-nginx-php
    working_dir: /var/www/html
    volumes:
      - ../src:/var/www/html
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: teste_symfony
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003
    networks:
      - snake_watch

  mysql:
    image: mysql:latest
    container_name: snake-watch-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: teste_symfony
    networks:
      - snake_watch

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: snake-watch-phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    networks:
      - snake_watch

  # Serviço Bot (Node.js)
  bot:
    build:
      context: ..  # Contexto apontando para a raiz do projeto
      dockerfile: Dockerfile  # Nome do Dockerfile na raiz do projeto
    container_name: snake-watch-bot
    working_dir: /usr/src/app
    volumes:
      - ../src:/usr/src/app  # Mantém o volume da aplicação
      - /usr/src/app/node_modules  # Impede sobrescrever node_modules
    command: [ "node", "bot.mjs" ]
    depends_on:
      - php
    networks:
      - snake_watch

volumes:
  db_data:  # Volume persistente para o banco de dados MySQL

networks:
  snake_watch:
    name: docker_snake_watch
